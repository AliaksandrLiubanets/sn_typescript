{"version":3,"file":"static/js/473.61951a54.chunk.js","mappings":"+NAYaA,EAAcC,EAAAA,MAAW,SAACC,GACnC,IAAIC,EAAI,mBAAeD,EAAME,MACvBC,GAAWC,EAAAA,EAAAA,MAKjB,OAAO,gBAAKC,UAAWC,EAAAA,EAAAA,YAAhB,UACH,UAAC,KAAD,CAASC,QALa,WACtBJ,EAASK,EAAAA,GAAAA,sBAAqC,MAITC,GAAIR,EAAMI,UAAW,qBAAGK,SAA2BJ,EAAAA,EAAAA,OAAW,IAAnG,WACI,gBAAKK,IAAKX,EAAMY,IAAKC,IAAK,SAC1B,yBAAMb,EAAME,e,uCCexB,EA5BgB,WAEZ,IAAOY,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAAvBF,QACAG,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IAAzBD,UAEDE,EAAeL,EAAQM,KAAI,SAACC,GAAD,OAAmB,SAACvB,EAAD,CACaI,KAAMmB,EAAEC,OACRC,GAAIF,EAAEE,GACNX,IAAKS,EAAEG,KAHFH,EAAEE,OAKxE,OAAO,8BAECN,GACM,SAACQ,EAAA,EAAD,KACA,iBAAKpB,UAAS,UAAKqB,EAAAA,EAAAA,WAAL,YAAqBpB,EAAAA,EAAAA,eAArB,KAAd,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,QAAhB,WACI,oCACCa,MAEL,0BACI,SAAC,KAAD","sources":["components/Dialogs/DialogsItem.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["import {NavLink} from 'react-router-dom'\r\nimport s from './Dialogs.module.css'\r\nimport React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {dialogsActions} from '../Redux/dialogs-reducer'\r\n\r\ntype DialogsItemType = {\r\n    id: string\r\n    name: string\r\n    ava: string\r\n}\r\n\r\nexport const DialogsItem = React.memo((props: DialogsItemType) => {\r\n    let path = `/dialogs/${props.name}`\r\n    const dispatch = useDispatch()\r\n    const cleanCurrentValue = () => {\r\n        dispatch(dialogsActions.setCurrentValueDialog(''))\r\n    }\r\n\r\n    return <div className={s.dialog_user}>\r\n        <NavLink onClick={cleanCurrentValue} to={path} className={({ isActive }) => (isActive ? s.active : \"\")}>\r\n            <img src={props.ava} alt={'ava'}/>\r\n            <div>{props.name}</div>\r\n        </NavLink>\r\n    </div>\r\n})","import s from './Dialogs.module.css'\r\nimport {DialogsItem} from './DialogsItem'\r\nimport {Outlet} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {DialogType} from '../Redux/dialogs-reducer'\r\nimport p from '../Profile/Profile.module.css'\r\nimport {appSelector, dialogsSelector} from '../../selectors/selectors'\r\nimport {Spinner} from '../common/Spinner/Spinner'\r\n\r\nconst Dialogs = () => {\r\n\r\n    const {dialogs} = useSelector(dialogsSelector)\r\n    const {isLoading} = useSelector(appSelector)\r\n\r\n    const dialogsItems = dialogs.map((d: DialogType) => <DialogsItem key={d.id}\r\n                                                                     name={d.author}\r\n                                                                     id={d.id}\r\n                                                                     ava={d.url}/>)\r\n\r\n    return <>\r\n        {\r\n            isLoading\r\n                ? <Spinner/>\r\n                : <div className={`${p.page_block} ${s.dialogs__block} `}>\r\n                    <div className={s.dialogs}>\r\n                        <h4>DIALOGS</h4>\r\n                        {dialogsItems}\r\n                    </div>\r\n                    <div>\r\n                        <Outlet/>\r\n                    </div>\r\n                </div>\r\n        }\r\n\r\n    </>\r\n}\r\n\r\nexport default Dialogs\r\n\r\n\r\n"],"names":["DialogsItem","React","props","path","name","dispatch","useDispatch","className","s","onClick","dialogsActions","to","isActive","src","ava","alt","dialogs","useSelector","dialogsSelector","isLoading","appSelector","dialogsItems","map","d","author","id","url","Spinner","p"],"sourceRoot":""}